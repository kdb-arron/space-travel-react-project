{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamro\\\\Desktop\\\\Software Development Certification\\\\React-JS\\\\Space Travel - React Project\\\\space-travel-starter-code-guided\\\\space-travel\\\\src\\\\pages\\\\SpacecraftBuild\\\\SpacecraftBuild.js\",\n  _s = $RefreshSig$();\n// **ORIGINAL**\n// import { useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import styles from \"./SpacecraftBuild.module.css\";\n// import { LoadingContext } from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\n// function SpacecraftBuild() {\n//   const INITIAL_SPACECRAFT = {\n//     name: \"\",\n//     capacity: \"\",\n//     description: \"\",\n//     pictureUrl: \"\",\n//   };\n//   const [spacecraft, setSpacecraft] = useState(INITIAL_SPACECRAFT);\n//   const [errors, setErrors] = useState([]);\n//   const { enableLoading, disableLoading } = useContext(LoadingContext);\n//   const navigate = useNavigate();\n\n//   const handleChangeOfFormInput = (event) => {\n//     setSpacecraft({\n//       ...spacecraft,\n//       [event.target.name]: event.target.value,\n//     });\n//   };\n\n//   const validateForm = () => {\n//     const errorList = [];\n//     if (!spacecraft.name) errorList.push(\"Name is required\");\n//     if (!spacecraft.capacity) errorList.push(\"Capacity is required\");\n//     if (!spacecraft.description) errorList.push(\"Description is required\");\n//     setErrors(errorList);\n//     return errorList.length === 0;\n//   };\n\n//   const handleSubmitOfForm = async (event) => {\n//     event.preventDefault();\n//     if (!validateForm()) return;\n//     enableLoading();\n//     const { isError } = await SpaceTravelApi.buildSpacecraft(spacecraft);\n//     if (!isError) navigate(\"/spacecrafts\");\n//     disableLoading();\n//   };\n\n//   return (\n//     <>\n//       <button className={styles[\"button__back\"]} onClick={() => navigate(-1)}>\n//         Back üëà\n//       </button>\n//       <form onSubmit={handleSubmitOfForm}>\n//         <div className={styles[\"form\"]}>\n//           <div className={styles[\"form__inputs\"]}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               placeholder=\"Name\"\n//               value={spacecraft.name}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <input\n//               type=\"number\"\n//               name=\"capacity\"\n//               placeholder=\"Capacity\"\n//               value={spacecraft.capacity}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <textarea\n//               name=\"description\"\n//               placeholder=\"Description\"\n//               value={spacecraft.description}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"pictureUrl\"\n//               placeholder=\"Picture URL\"\n//               value={spacecraft.pictureUrl}\n//               onChange={handleChangeOfFormInput}\n//             />\n//           </div>\n//           <div className={styles[\"submitContainer\"]}>\n//             {errors.length > 0 && (\n//               <div className={styles[\"errorContainer\"]}>\n//                 {errors.map((error, index) => (\n//                   <div key={index} className={styles[\"error\"]}>\n//                     {error}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//             <button type=\"submit\">Build üèóÔ∏è</button>\n//           </div>\n//         </div>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default SpacecraftBuild;\n\n// **UPDATE 2**\n// import { useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import styles from \"./SpacecraftBuild.module.css\";\n// import { LoadingContext } from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\n// function SpacecraftBuild() {\n//   const INITIAL_SPACECRAFT = {\n//     name: \"\",\n//     capacity: \"\",\n//     description: \"\",\n//     pictureUrl: \"\",\n//   };\n//   const [spacecraft, setSpacecraft] = useState(INITIAL_SPACECRAFT);\n//   const [errors, setErrors] = useState([]);\n//   const { enableLoading, disableLoading } = useContext(LoadingContext);\n//   const navigate = useNavigate();\n\n//   const handleChangeOfFormInput = (event) => {\n//     setSpacecraft({\n//       ...spacecraft,\n//       [event.target.name]: event.target.value,\n//     });\n//   };\n\n//   const validateForm = () => {\n//     const errorList = [];\n//     if (!spacecraft.name) errorList.push(\"Name is required\");\n//     if (!spacecraft.capacity || isNaN(spacecraft.capacity)) errorList.push(\"Valid capacity is required\");\n//     if (!spacecraft.description) errorList.push(\"Description is required\");\n//     setErrors(errorList);\n//     return errorList.length === 0;\n//   };\n\n//   const handleSubmitOfForm = async (event) => {\n//     event.preventDefault();\n//     if (!validateForm()) return;\n//     enableLoading();\n//     const { isError } = await SpaceTravelApi.buildSpacecraft({\n//       name: spacecraft.name,\n//       capacity: parseInt(spacecraft.capacity, 10),\n//       description: spacecraft.description,\n//       pictureUrl: spacecraft.pictureUrl || undefined,\n//     });\n//     if (!isError) navigate(\"/spacecrafts\");\n//     disableLoading();\n//   };\n\n//   return (\n//     <>\n//       <button className={styles[\"button__back\"]} onClick={() => navigate(-1)}>\n//         Back üëà\n//       </button>\n//       <form onSubmit={handleSubmitOfForm}>\n//         <div className={styles[\"form\"]}>\n//           <div className={styles[\"form__inputs\"]}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               placeholder=\"Name\"\n//               value={spacecraft.name}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <input\n//               type=\"number\"\n//               name=\"capacity\"\n//               placeholder=\"Capacity\"\n//               value={spacecraft.capacity}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <textarea\n//               name=\"description\"\n//               placeholder=\"Description\"\n//               value={spacecraft.description}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"pictureUrl\"\n//               placeholder=\"Picture URL\"\n//               value={spacecraft.pictureUrl}\n//               onChange={handleChangeOfFormInput}\n//             />\n//           </div>\n//           <div className={styles[\"submitContainer\"]}>\n//             {errors.length > 0 && (\n//               <div className={styles[\"errorContainer\"]}>\n//                 {errors.map((error, index) => (\n//                   <div key={index} className={styles[\"error\"]}>\n//                     {error}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//             <button type=\"submit\">Build üèóÔ∏è</button>\n//           </div>\n//         </div>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default SpacecraftBuild;\n\n// **UPDATE 3**\nimport { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./SpacecraftBuild.module.css\";\nimport { LoadingContext } from \"../../context/LoadingProvider\";\nimport SpaceTravelApi from \"../../services/SpaceTravelApi\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SpacecraftBuild() {\n  _s();\n  const INITIAL_SPACECRAFT = {\n    name: \"\",\n    capacity: \"\",\n    description: \"\",\n    pictureUrl: \"\"\n  };\n  const [spacecraft, setSpacecraft] = useState(INITIAL_SPACECRAFT);\n  const [errors, setErrors] = useState([]);\n  const {\n    enableLoading,\n    disableLoading\n  } = useContext(LoadingContext);\n  const navigate = useNavigate();\n  const handleChangeOfFormInput = event => {\n    setSpacecraft({\n      ...spacecraft,\n      [event.target.name]: event.target.value\n    });\n  };\n  const validateForm = () => {\n    const errorList = [];\n    if (!spacecraft.name) errorList.push(\"Name is required\");\n    if (!spacecraft.capacity || isNaN(spacecraft.capacity)) errorList.push(\"Valid capacity is required\");\n    if (!spacecraft.description) errorList.push(\"Description is required\");\n    setErrors(errorList);\n    return errorList.length === 0;\n  };\n  const handleSubmitOfForm = async event => {\n    event.preventDefault();\n    if (!validateForm()) return;\n    enableLoading();\n    const {\n      isError\n    } = await SpaceTravelApi.buildSpacecraft({\n      name: spacecraft.name,\n      capacity: parseInt(spacecraft.capacity, 10),\n      description: spacecraft.description,\n      pictureUrl: spacecraft.pictureUrl || undefined\n    });\n    if (!isError) navigate(\"/spacecrafts\");\n    disableLoading();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles[\"button__back\"],\n      onClick: () => navigate(-1),\n      children: \"Back \\uD83D\\uDC48\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitOfForm,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"form\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"form__inputs\"],\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\",\n            value: spacecraft.name,\n            onChange: handleChangeOfFormInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"capacity\",\n            placeholder: \"Capacity\",\n            value: spacecraft.capacity,\n            onChange: handleChangeOfFormInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            placeholder: \"Description\",\n            value: spacecraft.description,\n            onChange: handleChangeOfFormInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"pictureUrl\",\n            placeholder: \"Picture URL\",\n            value: spacecraft.pictureUrl,\n            onChange: handleChangeOfFormInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), spacecraft.pictureUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"image-preview\"],\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: spacecraft.pictureUrl,\n              alt: \"Spacecraft preview\",\n              className: styles[\"image-preview__image\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"submitContainer\"],\n          children: [errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"errorContainer\"],\n            children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"error\"],\n              children: error\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Build \\uD83C\\uDFD7\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SpacecraftBuild, \"kHchbAZxMoP/+7l+AHHuaKq6mwM=\", false, function () {\n  return [useNavigate];\n});\n_c = SpacecraftBuild;\nexport default SpacecraftBuild;\nvar _c;\n$RefreshReg$(_c, \"SpacecraftBuild\");","map":{"version":3,"names":["useState","useContext","useNavigate","styles","LoadingContext","SpaceTravelApi","jsxDEV","_jsxDEV","Fragment","_Fragment","SpacecraftBuild","_s","INITIAL_SPACECRAFT","name","capacity","description","pictureUrl","spacecraft","setSpacecraft","errors","setErrors","enableLoading","disableLoading","navigate","handleChangeOfFormInput","event","target","value","validateForm","errorList","push","isNaN","length","handleSubmitOfForm","preventDefault","isError","buildSpacecraft","parseInt","undefined","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","src","alt","map","error","index","_c","$RefreshReg$"],"sources":["C:/Users/hamro/Desktop/Software Development Certification/React-JS/Space Travel - React Project/space-travel-starter-code-guided/space-travel/src/pages/SpacecraftBuild/SpacecraftBuild.js"],"sourcesContent":["// **ORIGINAL**\n// import { useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import styles from \"./SpacecraftBuild.module.css\";\n// import { LoadingContext } from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\n// function SpacecraftBuild() {\n//   const INITIAL_SPACECRAFT = {\n//     name: \"\",\n//     capacity: \"\",\n//     description: \"\",\n//     pictureUrl: \"\",\n//   };\n//   const [spacecraft, setSpacecraft] = useState(INITIAL_SPACECRAFT);\n//   const [errors, setErrors] = useState([]);\n//   const { enableLoading, disableLoading } = useContext(LoadingContext);\n//   const navigate = useNavigate();\n\n//   const handleChangeOfFormInput = (event) => {\n//     setSpacecraft({\n//       ...spacecraft,\n//       [event.target.name]: event.target.value,\n//     });\n//   };\n\n//   const validateForm = () => {\n//     const errorList = [];\n//     if (!spacecraft.name) errorList.push(\"Name is required\");\n//     if (!spacecraft.capacity) errorList.push(\"Capacity is required\");\n//     if (!spacecraft.description) errorList.push(\"Description is required\");\n//     setErrors(errorList);\n//     return errorList.length === 0;\n//   };\n\n//   const handleSubmitOfForm = async (event) => {\n//     event.preventDefault();\n//     if (!validateForm()) return;\n//     enableLoading();\n//     const { isError } = await SpaceTravelApi.buildSpacecraft(spacecraft);\n//     if (!isError) navigate(\"/spacecrafts\");\n//     disableLoading();\n//   };\n\n//   return (\n//     <>\n//       <button className={styles[\"button__back\"]} onClick={() => navigate(-1)}>\n//         Back üëà\n//       </button>\n//       <form onSubmit={handleSubmitOfForm}>\n//         <div className={styles[\"form\"]}>\n//           <div className={styles[\"form__inputs\"]}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               placeholder=\"Name\"\n//               value={spacecraft.name}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <input\n//               type=\"number\"\n//               name=\"capacity\"\n//               placeholder=\"Capacity\"\n//               value={spacecraft.capacity}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <textarea\n//               name=\"description\"\n//               placeholder=\"Description\"\n//               value={spacecraft.description}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"pictureUrl\"\n//               placeholder=\"Picture URL\"\n//               value={spacecraft.pictureUrl}\n//               onChange={handleChangeOfFormInput}\n//             />\n//           </div>\n//           <div className={styles[\"submitContainer\"]}>\n//             {errors.length > 0 && (\n//               <div className={styles[\"errorContainer\"]}>\n//                 {errors.map((error, index) => (\n//                   <div key={index} className={styles[\"error\"]}>\n//                     {error}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//             <button type=\"submit\">Build üèóÔ∏è</button>\n//           </div>\n//         </div>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default SpacecraftBuild;\n\n\n\n// **UPDATE 2**\n// import { useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import styles from \"./SpacecraftBuild.module.css\";\n// import { LoadingContext } from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\n// function SpacecraftBuild() {\n//   const INITIAL_SPACECRAFT = {\n//     name: \"\",\n//     capacity: \"\",\n//     description: \"\",\n//     pictureUrl: \"\",\n//   };\n//   const [spacecraft, setSpacecraft] = useState(INITIAL_SPACECRAFT);\n//   const [errors, setErrors] = useState([]);\n//   const { enableLoading, disableLoading } = useContext(LoadingContext);\n//   const navigate = useNavigate();\n\n//   const handleChangeOfFormInput = (event) => {\n//     setSpacecraft({\n//       ...spacecraft,\n//       [event.target.name]: event.target.value,\n//     });\n//   };\n\n//   const validateForm = () => {\n//     const errorList = [];\n//     if (!spacecraft.name) errorList.push(\"Name is required\");\n//     if (!spacecraft.capacity || isNaN(spacecraft.capacity)) errorList.push(\"Valid capacity is required\");\n//     if (!spacecraft.description) errorList.push(\"Description is required\");\n//     setErrors(errorList);\n//     return errorList.length === 0;\n//   };\n\n//   const handleSubmitOfForm = async (event) => {\n//     event.preventDefault();\n//     if (!validateForm()) return;\n//     enableLoading();\n//     const { isError } = await SpaceTravelApi.buildSpacecraft({\n//       name: spacecraft.name,\n//       capacity: parseInt(spacecraft.capacity, 10),\n//       description: spacecraft.description,\n//       pictureUrl: spacecraft.pictureUrl || undefined,\n//     });\n//     if (!isError) navigate(\"/spacecrafts\");\n//     disableLoading();\n//   };\n\n//   return (\n//     <>\n//       <button className={styles[\"button__back\"]} onClick={() => navigate(-1)}>\n//         Back üëà\n//       </button>\n//       <form onSubmit={handleSubmitOfForm}>\n//         <div className={styles[\"form\"]}>\n//           <div className={styles[\"form__inputs\"]}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               placeholder=\"Name\"\n//               value={spacecraft.name}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <input\n//               type=\"number\"\n//               name=\"capacity\"\n//               placeholder=\"Capacity\"\n//               value={spacecraft.capacity}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <textarea\n//               name=\"description\"\n//               placeholder=\"Description\"\n//               value={spacecraft.description}\n//               onChange={handleChangeOfFormInput}\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"pictureUrl\"\n//               placeholder=\"Picture URL\"\n//               value={spacecraft.pictureUrl}\n//               onChange={handleChangeOfFormInput}\n//             />\n//           </div>\n//           <div className={styles[\"submitContainer\"]}>\n//             {errors.length > 0 && (\n//               <div className={styles[\"errorContainer\"]}>\n//                 {errors.map((error, index) => (\n//                   <div key={index} className={styles[\"error\"]}>\n//                     {error}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//             <button type=\"submit\">Build üèóÔ∏è</button>\n//           </div>\n//         </div>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default SpacecraftBuild;\n\n\n\n// **UPDATE 3**\nimport { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./SpacecraftBuild.module.css\";\nimport { LoadingContext } from \"../../context/LoadingProvider\";\nimport SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\nfunction SpacecraftBuild() {\n  const INITIAL_SPACECRAFT = {\n    name: \"\",\n    capacity: \"\",\n    description: \"\",\n    pictureUrl: \"\",\n  };\n  const [spacecraft, setSpacecraft] = useState(INITIAL_SPACECRAFT);\n  const [errors, setErrors] = useState([]);\n  const { enableLoading, disableLoading } = useContext(LoadingContext);\n  const navigate = useNavigate();\n\n  const handleChangeOfFormInput = (event) => {\n    setSpacecraft({\n      ...spacecraft,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const validateForm = () => {\n    const errorList = [];\n    if (!spacecraft.name) errorList.push(\"Name is required\");\n    if (!spacecraft.capacity || isNaN(spacecraft.capacity)) errorList.push(\"Valid capacity is required\");\n    if (!spacecraft.description) errorList.push(\"Description is required\");\n    setErrors(errorList);\n    return errorList.length === 0;\n  };\n\n  const handleSubmitOfForm = async (event) => {\n    event.preventDefault();\n    if (!validateForm()) return;\n    enableLoading();\n    const { isError } = await SpaceTravelApi.buildSpacecraft({\n      name: spacecraft.name,\n      capacity: parseInt(spacecraft.capacity, 10),\n      description: spacecraft.description,\n      pictureUrl: spacecraft.pictureUrl || undefined,\n    });\n    if (!isError) navigate(\"/spacecrafts\");\n    disableLoading();\n  };\n\n  return (\n    <>\n      <button className={styles[\"button__back\"]} onClick={() => navigate(-1)}>\n        Back üëà\n      </button>\n      <form onSubmit={handleSubmitOfForm}>\n        <div className={styles[\"form\"]}>\n          <div className={styles[\"form__inputs\"]}>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={spacecraft.name}\n              onChange={handleChangeOfFormInput}\n            />\n            <input\n              type=\"number\"\n              name=\"capacity\"\n              placeholder=\"Capacity\"\n              value={spacecraft.capacity}\n              onChange={handleChangeOfFormInput}\n            />\n            <textarea\n              name=\"description\"\n              placeholder=\"Description\"\n              value={spacecraft.description}\n              onChange={handleChangeOfFormInput}\n            />\n            <input\n              type=\"text\"\n              name=\"pictureUrl\"\n              placeholder=\"Picture URL\"\n              value={spacecraft.pictureUrl}\n              onChange={handleChangeOfFormInput}\n            />\n\n            {/* Image Preview */}\n            {spacecraft.pictureUrl && (\n              <div className={styles[\"image-preview\"]}>\n                <img\n                  src={spacecraft.pictureUrl}\n                  alt=\"Spacecraft preview\"\n                  className={styles[\"image-preview__image\"]}\n                />\n              </div>\n            )}\n          </div>\n          <div className={styles[\"submitContainer\"]}>\n            {errors.length > 0 && (\n              <div className={styles[\"errorContainer\"]}>\n                {errors.map((error, index) => (\n                  <div key={index} className={styles[\"error\"]}>\n                    {error}\n                  </div>\n                ))}\n              </div>\n            )}\n            <button type=\"submit\">Build üèóÔ∏è</button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default SpacecraftBuild;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,8BAA8B;AACjD,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,OAAOC,cAAc,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,SAASC,eAAeA,CAAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}